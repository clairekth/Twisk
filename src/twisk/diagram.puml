@startuml
package twisk {
    package monde {
        abstract class Etape {
            # int numEtape
            # String nom
            # GestionnaireSuccesseur gestionnaireSuccesseur

            .. Constructeur ..
            + Etape(String nom)
            .. Getters ..
            + int nbSuccesseurs()
            + boolean estUneActivite()
            + boolean estUnGuichet()
            + boolean estUneSortie()
            + String getNom()
            + int getNumEtape()
            + {abstract} int getNbJetons()
            .. Setters ..
            + void ajouterSuccesseur(Etape... etapes)
            .. Autres méthodes ..
            + Iterator<Etape> iterator()
            + String toString()
            + {abstract} String toC()
        }

        class Activite {
            # int temps
            # int ecartTemps

            .. Constructeurs ..
            + Activite(String nom)
            + Activite(String nom, int t, int e)
            .. Getters ..
            + boolean estUneActivite()
            + int getNbJetons()
            .. Autres méthodes ..
            + String toC()
        }

        class ActiviteRestreinte {
            - int numSemGuichet

            .. Constructeurs ..
            + ActiviteRestreinte(String nom)
            + ActiviteRestreinte(String nom, int t, int e)
            .. Setter ..
            + void aCommeGuichet(int semaphore)
            .. Autres méthodes ..
            + String toC()
        }
    }

    package outils {
        class Fabrique {
        }
    }

    package ressources {
        class files
        }

    package simulation {
        class Simulation {
        }
    }

    class ClientTwisk {
    }

    class Iterable {
    + Iterator<Etape> iterator()
    }
}

Etape .up.|> Iterable
Activite -up-|> Etape
ActiviteRestreinte -up-|> Etape
@enduml